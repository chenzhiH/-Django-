"""
Django settings for assistant project.

Generated by 'django-admin startproject' using Django 2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import ops

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'g(7f)%o1x^ci7(+%%0mxl)*cz(v7seesz7^pqr!n8n227kdtjl'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'view',
    'authorization',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
   # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'assistant.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'assistant.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': "assistant",  # 数据库名字
        'USER': 'root',  # 用户名字
        'PASSWORD': '683486',  # 数据库密码
        'HOST': 'localhost',  # 本地IP
        'PORT': '3306'  # 端口号
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
WX_APP_SECRET='ea5d5f0529c624889004cd623dd579c8'

LOG_DIR = os.path.join(BASE_DIR,'log')  #创建目录
if not os.path.exists(LOG_DIR):  #如果目录不存在，则自动创建
    os.makedirs(LOG_DIR)

LOGGING={
    'version':1,  #设置版本号
    'disable_existing_loggers': False,
    'formatters':{
        'standard':{
            'format':'%(asctime)s [%(threadName)s:%(thread)d]' '%(pathname)s :%(funcName)s:%(lineno)d %(levelname)s - %(message)s'

        }
    },
    'filters':{
        'test':{
            '()':'ops.TextFilter'
        }
    },
    'handlers':{
        'console_handler':{   #输出到控制台
            'level':'DEBUG',  #定义级别
            'class':'logging.StreamHandler',
            'formatter':'standard',
        },
        'file_handler':{   #记录到日志文件(需要创建对应的目录，否则会出错)
            'level':'INFO',  #定义级别
            'class':'logging.handlers.RotatingFileHandler',
            'filename':os.path.join(LOG_DIR,'assistant.log'),
            'maxBytes':1024*1024*1024,
            'backupCount':5,
            'formatter': 'standard',
            'encoding':'utf-8'
        }
    },
    'loggers':{  #logging管理器，必须为loggers，不能改
        'django':{
            'handlers':['console_handler','file_handler'],
            'filters':['test'],
            'level': 'DEBUG',
            'propagate': True,
        }
    }
}

CACHES = {
    'default':{
        'BACKEND':'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION':'assistant-cache'
    }
}
#https://gz.58.com/chuzu/?PGTID=0d200001-0000-33e7-3bc5-71d47294bda5&ClickID=2
#https://gz.58.com/chuzu/pn2/?PGTID=0d3090a7-0000-3e54-449a-7df79f430260&ClickID=2
#https://gz.58.com/chuzu/pn3/?PGTID=0d3090a7-0000-3c8b-9765-e8aab186cf44&ClickID=2
# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters': {
#         'standard': {
#             'format': '%(asctime)s %(levelname)-8s %(message)s'
#         },
#         'detail': {
#             'format': '%(asctime)s %(levelname)-8s %(pathname)s[line:%(lineno)d] %(message)s'
#         },
#     },
#     'handlers': {
#         'console': {
#             'level': 'DEBUG',
#             'class': 'logging.StreamHandler',
#             'formatter': 'standard',
#         },
#         'file': {
#             'level': 'INFO',
#             'class': 'logging.handlers.RotatingFileHandler',
#             'filename': os.path.join(LOG_DIR,'assistant.log'),
#             'maxBytes': 1024 * 1024 * 5,  # 5 MB
#             'backupCount': 100,
#             'formatter': 'detail',
#         }
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['console', 'file'],
#             'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
#             'propagate': True,
#         }
#
#     },
# }